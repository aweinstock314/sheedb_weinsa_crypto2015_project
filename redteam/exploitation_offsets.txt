avi@aweinstock-debian:~/Documents/rpi_fall2015/crypto/otherteam_final/atm$ objdump -d backup_bins/bank | grep -A5 'thread_handlePv>:'
0000000000412a10 <_Z13thread_handlePv>:
  412a10:       55                      push   %rbp
  412a11:       48 89 e5                mov    %rsp,%rbp
  412a14:       48 81 ec 70 01 00 00    sub    $0x170,%rsp
  412a1b:       48 8d 04 25 a0 97 62    lea    0x6297a0,%rax
  412a22:       00 
-----
avi@aweinstock-debian:~/Documents/rpi_fall2015/crypto/otherteam_final/atm$ xxd backup_bins/bank | grep 'ed\.'   000b9d0: 6c5f 756e 6578 7065 6374 6564 005f 5a53  l_unexpected._ZS
001d260: 7265 6164 2063 7265 6174 6564 004e 6577  read created.New
001d280: 7320 7061 7273 6564 0052 4541 443a 2000  s parsed.READ: .
001d370: 6574 2062 696e 6420 6661 696c 6564 004c  et bind failed.L
001d3b0: 7420 6c69 7374 656e 2066 6169 6c65 6400  t listen failed.
001d910: 6569 6e69 7469 616c 697a 6564 006e 203c  einitialized.n <
001da30: 616c 6c6f 6361 7465 6400 766f 6964 2043  allocated.void C
002f8f0: 706c 6574 6564 2e36 3937 3300 5f5f 646f  pleted.6973.__do
00315c0: 4f5f 7374 6469 6e5f 7573 6564 005f 5a4e  O_stdin_used._ZN
-----
*Main> pub
PublicKey {public_size = 384, public_n = 4728977487432833207231063170861537275107631947371200572454929534137882898506950673724308317992087411199224634248078098993157239699520929006151626572844876338590566128601330324202263335310407768873920085187879352000455796661511643479345529404156368213236618112251319812551456208480198716446612926623670144123657141379251590285302654278078578921356329644496051691489607085959697808423007397814881809063045164830887783453280063703751975338128379975585196373819784316128817850290062499309417007129419279157310142761700551008543798004293578170356460639664548380837896237936195304558310159414813017020316717874964152334005415221764667510905801991630207128186457996990493931236520552308410119989858915767171670189741228911969388669797231430083924875357455110135594927057744177331697578578988386033017107981123988135247598628244759370251741191839493806189619731519866794594735942800626568946229112268435050368804775487637044723113261, public_e = 17}
*Main> let f n = encrypt (defaultOAEPParams SHA1) pub $ B.replicate n 0x41
*Main> f 343
Left MessageTooLong
*Main> f 342
Right "\179\192Q\171]\235\t\183\&8\209^u\167\175C\132\168C\188\178nX[\161\245\218\250\&3\228\188K\183\151\160?V\165\138\252}\207\128=\NAK\159\204\243h\FS\181M\229\181e\170\207\148h\176\220@\216m\245\\\164\172\138\169\151^\143\219\212\226\&7\237\139q\129\167 \255\CANS\238\202\t\215\138\220\253\233\224G[\210\204\152~_\228{\229\249>\133CvG\150\222k\173\133\&7Q\216p\SUB\196\DC4\158X\149\186\EOTW\170\ETB\233V\SI\"X]\nG\204=\135m\210\194\132\166\215\213\ETX\146\244\216\167\EM\129\228\226\144\184}\230\177\DC1\207\149\226}\bG\r\240P\142B\193\EMx\130\DLED}^\150\ESCk\235\DC2\191\241C|8H2J7\239\SUB\187\NAK:WX\160\138%\240\170\145\&3\223<\177\&4\137A'\ESC\237,?\152vG*\191X\169`\232\DC4\136h<dr\152\179A\246\128V\241\rWN\155\RS\208.(90\b\143^\tQ#kn\FS-\DC1\174\&4P\199 \173\&9g\251\246&\176\231\134 \227\165\180\171\137\252\216AI\"\232\254'\SOs\178Lv@\DC4\164\249H\158\240\181'=\185\USYv\t\155F\188$\223>\254tG<\188\227\v-\191b')l\197\NAK$\DC1<\209\236,\252\"R\152H\SIZ\201\237\243&\192\233X\233\233w_,\NUL\SO\189\153u,'/\170%T\153\242\204\149\156o,\230x\GSA\249\"\210\f"
-----
$ python -c 'import pwn; print pwn.cyclic(342)'
aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadka
-----
[pid 27656] read(4, "dummy", 512)       = 5
[pid 27656] open("/dev/urandom", O_RDONLY) = 6
[pid 27656] read(6, "\24c\2458a1~\267\336[\235C\214\343d\36Q\373\336Y`\357\21\371NL\302\341e\f\35\357", 32) = 32
[pid 27656] close(6)                    = 0
[pid 27656] write(4, "DUMMY", 5)        = 5
[pid 27656] read(1633771882, 0x7f9e32448ad0, 128) = -1 EBADF (Bad file descriptor)
[pid 27656] open("/dev/urandom", O_RDONLY) = 6
[pid 27656] read(6, "{5\7\5\250v@\227(\300\321\307\345bFQ\20\261:\277\25EB\312\272\272\302C\350\270v7", 32) = 32
[pid 27656] close(6)                    = 0
[pid 27656] read(1633771882, 0x7f9e32448ad0, 128) = -1 EBADF (Bad file descriptor)
[pid 27656] open("/dev/urandom", O_RDONLY) = 6
[pid 27656] read(6, "V\303\242\205\7f\2474\201\376%2\302\30\313\237\20h\344\232l\3\312f59\205K_.%\342", 32) = 32
[pid 27656] close(6)                    = 0
[pid 27656] read(1633771882, 0x7f9e32448ad0, 128) = -1 EBADF (Bad file descriptor)
[pid 27656] open("/dev/urandom", O_RDONLY) = 6
[pid 27656] read(6, "o\250\217iQ\3\346L\32\306]z\20306{l[\00701\356\353\301\212\220zIQY\365\302", 32) = 32
[pid 27656] close(6)                    = 0
-----
$ python -c 'from pwn import *; print cyclic_find(p32(1633771882))'
36
-----
(gdb) t 3
[Switching to thread 3 (Thread 0x7ffff6187700 (LWP 27877))]
#0  0x00007ffff74c11fd in read () from /lib/x86_64-linux-gnu/libpthread.so.0
(gdb) bt
#0  0x00007ffff74c11fd in read () from /lib/x86_64-linux-gnu/libpthread.so.0
#1  0x00007ffff7a74849 in CryptoPP::NonblockingRng::GenerateBlock(unsigned char*, unsigned long) ()
   from /usr/lib/libcrypto++.so.9
#2  0x00007ffff7a749e4 in CryptoPP::OS_GenerateRandomBlock(bool, unsigned char*, unsigned long) ()
   from /usr/lib/libcrypto++.so.9
#3  0x00007ffff7a74a91 in CryptoPP::AutoSeededRandomPool::Reseed(bool, unsigned int) ()
   from /usr/lib/libcrypto++.so.9
#4  0x000000000041ec2e in CryptoPP::AutoSeededRandomPool::AutoSeededRandomPool(bool, unsigned int) ()
#5  0x0000000000419db4 in action::decrypt_aes(std::string const&, unsigned char*, unsigned char*) ()
#6  0x0000000000419c42 in action::Action::recv(int, std::string&, unsigned char*, unsigned char*) ()
#7  0x000000000041dccd in thread_handle(void*) ()
#8  0x4242424242424242 in ?? ()
#9  0x4242424242424242 in ?? ()
#10 0x4242424242424242 in ?? ()
#11 0x4242424242424242 in ?? ()
#12 0x4242424242424242 in ?? ()
#13 0x4242424242424242 in ?? ()
#14 0x4242424242424242 in ?? ()
#15 0x4242424242424242 in ?? ()
#16 0x4242424242424242 in ?? ()
#17 0x4242424242424242 in ?? ()
#18 0x4242424242424242 in ?? ()
#19 0x4242424242424242 in ?? ()
#20 0x4242424242424242 in ?? ()
#21 0x4242424242424242 in ?? ()
#22 0x4242424242424242 in ?? ()
#23 0x4242424242424242 in ?? ()
#24 0x4242424242424242 in ?? ()
#25 0x4242424242424242 in ?? ()
#26 0x4242424242424242 in ?? ()
#27 0x4242424242424242 in ?? ()
#28 0x4242424242424242 in ?? ()
#29 0x4242424242424242 in ?? ()
#30 0x4242424242424242 in ?? ()
#31 0x4242424242424242 in ?? ()
#32 0x4242424242424242 in ?? ()
#33 0x4242424242424242 in ?? ()
#34 0x4242424242424242 in ?? ()
#35 0x4242424242424242 in ?? ()
#36 0x4242424242424242 in ?? ()
#37 0x4242424242424242 in ?? ()
#38 0x4242424242424242 in ?? ()
#39 0x4242424242424242 in ?? ()
#40 0x4242424242424242 in ?? ()
#41 0x0000424242424242 in ?? ()
#42 0x00007ffff6a6495d in clone () from /lib/x86_64-linux-gnu/libc.so.6
#43 0x0000000000000000 in ?? ()
-----
Starting program: /home/avi/Documents/rpi_fall2015/crypto/otherteam_final/atm/bank 1201
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[New Thread 0x7ffff6988700 (LWP 3365)]
[New Thread 0x7ffff6187700 (LWP 3371)]
[Switching to Thread 0x7ffff6187700 (LWP 3371)]

Breakpoint 1, 0x000000000041b5f6 in bank_aes_handshake(int, CryptoPP::InvertibleRSAFunction&, CryptoPP::RSAFunction&, unsigned char*, unsigned char*, std::string&) ()
(gdb) x/128wx 0x7ffff6186e80 -0x100
0x7ffff6186d80: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186d90: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186da0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186db0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186dc0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186dd0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186de0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186df0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e00: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e10: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e20: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e30: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e40: 0x00000080      0x00000000      0xf74bab92      0x00007fff
0x7ffff6186e50: 0x00000000      0x00000000      0xf74b2498      0x00007fff
0x7ffff6186e60: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e70: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e80: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e90: 0xffffd8e8      0x00007fff      0xffffd950      0x00007fff
0x7ffff6186ea0: 0x00000000      0x00000008      0xffffd7f0      0x00007fff
0x7ffff6186eb0: 0xffffd7f0      0x00007fff      0x00000000      0x00000000
0x7ffff6186ec0: 0x00000000      0x00000000      0xf74b9b50      0x00007fff
0x7ffff6186ed0: 0x00000000      0x00000000      0xf6187700      0x00007fff
0x7ffff6186ee0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186ef0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f00: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f10: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f20: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f30: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f40: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f50: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f60: 0xf6187700      0x00007fff      0xee5e5fa5      0xb61af01d
0x7ffff6186f70: 0xf74c4220      0x00007fff      0xf61879c0      0x00007fff
(gdb) c
Continuing.
^C
Program received signal SIGINT, Interrupt.
[Switching to Thread 0x7ffff7fd9720 (LWP 3364)]
0x00007ffff74c143d in accept () from /lib/x86_64-linux-gnu/libpthread.so.0
(gdb) thread 3
[Switching to thread 3 (Thread 0x7ffff6187700 (LWP 3371))]
#0  0x00007ffff74c11fd in read () from /lib/x86_64-linux-gnu/libpthread.so.0
(gdb) x/128wx 0x7ffff6186e80 - 0x100
0x7ffff6186d80: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186d90: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186da0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186db0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186dc0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186dd0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186de0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186df0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e00: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e10: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e20: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e30: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e40: 0x00000080      0x00000000      0xf74bab92      0x00007fff
0x7ffff6186e50: 0x00000000      0x00000000      0xf74b2498      0x00007fff
0x7ffff6186e60: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e70: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186e80: 0x61616161      0x61616162      0x61616163      0x61616164
0x7ffff6186e90: 0x61616165      0x61616166      0x61616167      0x61616168
0x7ffff6186ea0: 0x61616169      0x00000000      0xffffd7f0      0x00007fff
0x7ffff6186eb0: 0xffffd7f0      0x00007fff      0x00000000      0x00000000
0x7ffff6186ec0: 0x00000000      0x00000000      0xf74b9b50      0x00007fff
0x7ffff6186ed0: 0x00000000      0x00000000      0xf6187700      0x00007fff
0x7ffff6186ee0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186ef0: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f00: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f10: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f20: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f30: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f40: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f50: 0x00000000      0x00000000      0x00000000      0x00000000
0x7ffff6186f60: 0xf6187700      0x00007fff      0xee5e5fa5      0xb61af01d
0x7ffff6186f70: 0xf74c4220      0x00007fff      0xf61879c0      0x00007fff
(gdb) x/32wx 0x00007fffffffd8e8
0x7fffffffd8e8: 0x0063d758      0x00000000      0x0063d7e8      0x00000000
0x7fffffffd8f8: 0x0063d8b8      0x00000000      0x0063ce70      0x00000000
0x7fffffffd908: 0xf7de6c02      0x00007fff      0x00000040      0x00000000
0x7fffffffd918: 0x00643dc0      0x00000000      0x00000000      0x00000000
0x7fffffffd928: 0x0063ce70      0x00000000      0x00000001      0x00000000
0x7fffffffd938: 0x00000002      0x00000000      0x00640600      0x00000000
0x7fffffffd948: 0x00000000      0x00007fff      0x0063deb8      0x00000000
0x7fffffffd958: 0x0063df88      0x00000000      0x0063e058      0x00000000
(gdb) x/32wx 0x00007fffffffd950
0x7fffffffd950: 0x0063deb8      0x00000000      0x0063df88      0x00000000
0x7fffffffd960: 0x0063e058      0x00000000      0x0063ce70      0x00000000
0x7fffffffd970: 0xffffda00      0x00007fff      0x00000040      0x00000000
0x7fffffffd980: 0x00643560      0x00000000      0x00000000      0x00000000
0x7fffffffd990: 0x0063ce70      0x00000000      0x00414420      0x00000000
0x7fffffffd9a0: 0x00000002      0x00000000      0x006403b0      0x00000000
0x7fffffffd9b0: 0x00000000      0x00007fff      0x0063e0c8      0x00000000
0x7fffffffd9c0: 0x0063e108      0x00000000      0x0063e1e8      0x00000000
(gdb) x/32wx 0x0063d758
0x63d758 <_ZTVN8CryptoPP11RSAFunctionE+24>:     0x0041fed0      0x00000000      0xf7a8f7c0      0x00007fff
0x63d768 <_ZTVN8CryptoPP11RSAFunctionE+40>:     0xf7a8e310      0x00007fff      0xf7a8e2f0      0x00007fff
0x63d778 <_ZTVN8CryptoPP11RSAFunctionE+56>:     0x00428ac0      0x00000000      0x00428b40      0x00000000
0x63d788 <_ZTVN8CryptoPP11RSAFunctionE+72>:     0x00428bc0      0x00000000      0x00428c10      0x00000000
0x63d798 <_ZTVN8CryptoPP11RSAFunctionE+88>:     0xf7a8a740      0x00007fff      0xf7a8afe0      0x00007fff
0x63d7a8 <_ZTVN8CryptoPP11RSAFunctionE+104>:    0xf7a8aa00      0x00007fff      0xf7a8a960      0x00007fff
0x63d7b8 <_ZTVN8CryptoPP11RSAFunctionE+120>:    0xf7a8aaa0      0x00007fff      0xf7a8ade0      0x00007fff
0x63d7c8 <_ZTVN8CryptoPP11RSAFunctionE+136>:    0xf7a8ba50      0x00007fff      0x00000008      0x00000000
(gdb) x/5i 0x00007ffff7a8f7c0
   0x7ffff7a8f7c0 <_ZN8CryptoPP11RSAFunctionD0Ev>:      push   %rbx
   0x7ffff7a8f7c1 <_ZN8CryptoPP11RSAFunctionD0Ev+1>:    mov    %rdi,%rbx
   0x7ffff7a8f7c4 <_ZN8CryptoPP11RSAFunctionD0Ev+4>:
    callq  0x7ffff7983060 <_ZN8CryptoPP11RSAFunctionD1Ev@plt>
   0x7ffff7a8f7c9 <_ZN8CryptoPP11RSAFunctionD0Ev+9>:    mov    %rbx,%rdi
   0x7ffff7a8f7cc <_ZN8CryptoPP11RSAFunctionD0Ev+12>:   pop    %rbx
(gdb) x/5i 0x00007ffff7a8e310
   0x7ffff7a8e310 <_ZNK8CryptoPP11RSAFunction13PreimageBoundEv>:        push   %rbx
   0x7ffff7a8e311 <_ZNK8CryptoPP11RSAFunction13PreimageBoundEv+1>:      add    $0x18,%rsi
   0x7ffff7a8e315 <_ZNK8CryptoPP11RSAFunction13PreimageBoundEv+5>:      mov    %rdi,%rbx
   0x7ffff7a8e318 <_ZNK8CryptoPP11RSAFunction13PreimageBoundEv+8>:
    callq  0x7ffff7983be0 <_ZN8CryptoPP7IntegerC1ERKS0_@plt>
   0x7ffff7a8e31d <_ZNK8CryptoPP11RSAFunction13PreimageBoundEv+13>:     mov    %rbx,%rax
-----
$ c++filt
_ZTVN8CryptoPP11RSAFunctionE
vtable for CryptoPP::RSAFunction
_ZN8CryptoPP11RSAFunctionD0Ev
CryptoPP::RSAFunction::~RSAFunction()
_ZNK8CryptoPP11RSAFunction13PreimageBoundEv
CryptoPP::RSAFunction::PreimageBound() const
-----
(gdb) p &_ZTVN8CryptoPP11RSAFunctionE
$2 = (<data variable, no debug info> *) 0x63d740
(gdb) x/128wx &_ZTVN8CryptoPP11RSAFunctionE
0x63d740 <_ZTVN8CryptoPP11RSAFunctionE>:        0x00000010      0x00000000      0x00000000      0x00000000
0x63d750 <_ZTVN8CryptoPP11RSAFunctionE+16>:     0xf7dc30c0      0x00007fff      0x0041fed0      0x00000000
0x63d760 <_ZTVN8CryptoPP11RSAFunctionE+32>:     0xf7a8f7c0      0x00007fff      0xf7a8e310      0x00007fff
0x63d770 <_ZTVN8CryptoPP11RSAFunctionE+48>:     0xf7a8e2f0      0x00007fff      0x00428ac0      0x00000000
0x63d780 <_ZTVN8CryptoPP11RSAFunctionE+64>:     0x00428b40      0x00000000      0x00428bc0      0x00000000
0x63d790 <_ZTVN8CryptoPP11RSAFunctionE+80>:     0x00428c10      0x00000000      0xf7a8a740      0x00007fff
0x63d7a0 <_ZTVN8CryptoPP11RSAFunctionE+96>:     0xf7a8afe0      0x00007fff      0xf7a8aa00      0x00007fff
0x63d7b0 <_ZTVN8CryptoPP11RSAFunctionE+112>:    0xf7a8a960      0x00007fff      0xf7a8aaa0      0x00007fff
0x63d7c0 <_ZTVN8CryptoPP11RSAFunctionE+128>:    0xf7a8ade0      0x00007fff      0xf7a8ba50      0x00007fff
0x63d7d0 <_ZTVN8CryptoPP11RSAFunctionE+144>:    0x00000008      0x00000000      0xfffffff8      0xffffffff
0x63d7e0 <_ZTVN8CryptoPP11RSAFunctionE+160>:    0xf7dc30c0      0x00007fff      0x004286a0      0x00000000
0x63d7f0 <_ZTVN8CryptoPP11RSAFunctionE+176>:    0xf7a8f800      0x00007fff      0xf798fa70      0x00007fff
0x63d800 <_ZTVN8CryptoPP11RSAFunctionE+192>:    0xf798f470      0x00007fff      0x004289f0      0x00000000
0x63d810 <_ZTVN8CryptoPP11RSAFunctionE+208>:    0xf798ff30      0x00007fff      0xf798ff50      0x00007fff
0x63d820 <_ZTVN8CryptoPP11RSAFunctionE+224>:    0xf7a8aff0      0x00007fff      0xf7990c10      0x00007fff
0x63d830 <_ZTVN8CryptoPP11RSAFunctionE+240>:    0xf7990bd0      0x00007fff      0xf7a8aa90      0x00007fff
0x63d840 <_ZTVN8CryptoPP11RSAFunctionE+256>:    0xf7a8a9f0      0x00007fff      0x00000000      0x00000000
0x63d850 <_ZTVN8CryptoPP11RSAFunctionE+272>:    0x00000000      0x00000000      0x00000000      0x00000000
0x63d860 <_ZTVN8CryptoPP11RSAFunctionE+288>:    0x00000000      0x00000000      0x00000000      0x00000000
0x63d870 <_ZTVN8CryptoPP11RSAFunctionE+304>:    0xfffffff8      0xffffffff      0xfffffff8      0xffffffff
0x63d880 <_ZTVN8CryptoPP11RSAFunctionE+320>:    0x00000000      0x00000000      0xfffffff0      0xffffffff
0x63d890 <_ZTVN8CryptoPP11RSAFunctionE+336>:    0xfffffff0      0xffffffff      0xfffffff0      0xffffffff
0x63d8a0 <_ZTVN8CryptoPP11RSAFunctionE+352>:    0xfffffff0      0xffffffff      0xfffffff0      0xffffffff
0x63d8b0 <_ZTVN8CryptoPP11RSAFunctionE+368>:    0xf7dc30c0      0x00007fff      0x00428700      0x00000000
0x63d8c0 <_ZTVN8CryptoPP11RSAFunctionE+384>:    0xf7a8f7f0      0x00007fff      0xf7a8ae70      0x00007fff
0x63d8d0 <_ZTVN8CryptoPP11RSAFunctionE+400>:    0xf7a8bad0      0x00007fff      0xf7a8ab20      0x00007fff
0x63d8e0 <_ZTVN8CryptoPP11RSAFunctionE+416>:    0x00428d90      0x00000000      0xf798ff40      0x00007fff
0x63d8f0 <_ZTVN8CryptoPP11RSAFunctionE+432>:    0xf798ff60      0x00007fff      0x00429060      0x00000000
0x63d900 <_ZTVN8CryptoPP11RSAFunctionE+448>:    0x00429080      0x00000000      0x004291a0      0x00000000
0x63d910 <_ZTVN8CryptoPP11RSAFunctionE+464>:    0x004292c0      0x00000000      0x00000000      0x00000000
0x63d920 <_ZTIN8CryptoPP6SourceE>:      0x0063e7d0      0x00000000      0xf7adb010      0x00007fff
0x63d930 <_ZTIN8CryptoPP6SourceE+16>:   0x00431920      0x00000000      0x00000000      0x00000000
-----
0x00000010      0x00000000      0x00000000      0x00000000
0xf7dc30c0      0x00007fff      0x0041fed0      0x00000000
0xf7a8f7c0      0x00007fff      0xf7a8e310      0x00007fff
0xf7a8e2f0      0x00007fff      0x00428ac0      0x00000000
0x00428b40      0x00000000      0x00428bc0      0x00000000
0x00428c10      0x00000000      0xf7a8a740      0x00007fff
0xf7a8afe0      0x00007fff      0xf7a8aa00      0x00007fff
0xf7a8a960      0x00007fff      0xf7a8aaa0      0x00007fff
0xf7a8ade0      0x00007fff      0xf7a8ba50      0x00007fff
0x00000008      0x00000000      0xfffffff8      0xffffffff
0xf7dc30c0      0x00007fff      0x004286a0      0x00000000
0xf7a8f800      0x00007fff      0xf798fa70      0x00007fff
0xf798f470      0x00007fff      0x004289f0      0x00000000
0xf798ff30      0x00007fff      0xf798ff50      0x00007fff
0xf7a8aff0      0x00007fff      0xf7990c10      0x00007fff
0xf7990bd0      0x00007fff      0xf7a8aa90      0x00007fff
0xf7a8a9f0      0x00007fff      0x00000000      0x00000000
0x00000000      0x00000000      0x00000000      0x00000000
0x00000000      0x00000000      0x00000000      0x00000000
0xfffffff8      0xffffffff      0xfffffff8      0xffffffff
0x00000000      0x00000000      0xfffffff0      0xffffffff
0xfffffff0      0xffffffff      0xfffffff0      0xffffffff
0xfffffff0      0xffffffff      0xfffffff0      0xffffffff
0xf7dc30c0      0x00007fff      0x00428700      0x00000000
0xf7a8f7f0      0x00007fff      0xf7a8ae70      0x00007fff
0xf7a8bad0      0x00007fff      0xf7a8ab20      0x00007fff
0x00428d90      0x00000000      0xf798ff40      0x00007fff
0xf798ff60      0x00007fff      0x00429060      0x00000000
0x00429080      0x00000000      0x004291a0      0x00000000
0x004292c0      0x00000000      0x00000000      0x00000000
-----
:!awk '{print $2 $1; print $4 $3}' | sed 's/0x//g' | sed 's@^@x/w 0x@' | grep -v '\(0\|f\)\{12,\}'
-----
x/w 0x00007ffff7dc30c0
x/w 0x000000000041fed0
x/w 0x00007ffff7a8f7c0
x/w 0x00007ffff7a8e310
x/w 0x00007ffff7a8e2f0
x/w 0x0000000000428ac0
x/w 0x0000000000428b40
x/w 0x0000000000428bc0
x/w 0x0000000000428c10
x/w 0x00007ffff7a8a740
x/w 0x00007ffff7a8afe0
x/w 0x00007ffff7a8aa00
x/w 0x00007ffff7a8a960
x/w 0x00007ffff7a8aaa0
x/w 0x00007ffff7a8ade0
x/w 0x00007ffff7a8ba50
x/w 0x00007ffff7dc30c0
x/w 0x00000000004286a0
x/w 0x00007ffff7a8f800
x/w 0x00007ffff798fa70
x/w 0x00007ffff798f470
x/w 0x00000000004289f0
x/w 0x00007ffff798ff30
x/w 0x00007ffff798ff50
x/w 0x00007ffff7a8aff0
x/w 0x00007ffff7990c10
x/w 0x00007ffff7990bd0
x/w 0x00007ffff7a8aa90
x/w 0x00007ffff7a8a9f0
x/w 0x00007ffff7dc30c0
x/w 0x0000000000428700
x/w 0x00007ffff7a8f7f0
x/w 0x00007ffff7a8ae70
x/w 0x00007ffff7a8bad0
x/w 0x00007ffff7a8ab20
x/w 0x0000000000428d90
x/w 0x00007ffff798ff40
x/w 0x00007ffff798ff60
x/w 0x0000000000429060
x/w 0x0000000000429080
x/w 0x00000000004291a0
x/w 0x00000000004292c0
-----
(gdb) x/w 0x00007ffff7dc30c0
0x7ffff7dc30c0 <_ZTIN8CryptoPP11RSAFunctionE>:  0x0063f210
(gdb) x/w 0x000000000041fed0
0x41fed0 <_ZN8CryptoPP11RSAFunctionD1Ev>:       0xe5894855
(gdb) x/w 0x00007ffff7a8f7c0
0x7ffff7a8f7c0 <_ZN8CryptoPP11RSAFunctionD0Ev>: 0xfb894853
(gdb) x/w 0x00007ffff7a8e310
0x7ffff7a8e310 <_ZNK8CryptoPP11RSAFunction13PreimageBoundEv>:   0xc6834853
(gdb) x/w 0x00007ffff7a8e2f0
0x7ffff7a8e2f0 <_ZNK8CryptoPP11RSAFunction10ImageBoundEv>:      0xc6834853
(gdb) x/w 0x0000000000428ac0
0x428ac0 <_ZNK8CryptoPP22TrapdoorFunctionBounds11MaxPreimageEv>:        0xe5894855
(gdb) x/w 0x0000000000428b40
0x428b40 <_ZNK8CryptoPP22TrapdoorFunctionBounds8MaxImageEv>:    0xe5894855
(gdb) x/w 0x0000000000428bc0
0x428bc0 <_ZNK8CryptoPP16TrapdoorFunction23ApplyRandomizedFunctionERNS_21RandomNumberGeneratorERKNS_7IntegerE>:0xe5894855
(gdb) x/w 0x0000000000428c10
0x428c10 <_ZNK8CryptoPP16TrapdoorFunction12IsRandomizedEv>:     0xe5894855
(gdb) x/w 0x00007ffff7a8a740
0x7ffff7a8a740 <_ZNK8CryptoPP11RSAFunction13ApplyFunctionERKNS_7IntegerE>:      0x245c8948
(gdb) x/w 0x00007ffff7a8afe0
0x7ffff7a8afe0 <_ZNK8CryptoPP11RSAFunction14GetAlgorithmIDEv>:  0xfb894853
(gdb) x/w 0x00007ffff7a8aa00
0x7ffff7a8aa00 <_ZN8CryptoPP11RSAFunction18BERDecodePublicKeyERNS_22BufferedTransformationEbm>: 0x0030ba55
(gdb) x/w 0x00007ffff7a8a960
0x7ffff7a8a960 <_ZNK8CryptoPP11RSAFunction18DEREncodePublicKeyERNS_22BufferedTransformationE>:  0x0030ba55
(gdb) x/w 0x00007ffff7a8aaa0
0x7ffff7a8aaa0 <_ZNK8CryptoPP11RSAFunction8ValidateERNS_21RandomNumberGeneratorEj>:     0xfd894855
(gdb) x/w 0x00007ffff7a8ade0
0x7ffff7a8ade0 <_ZNK8CryptoPP11RSAFunction12GetVoidValueEPKcRKSt9type_infoPv>:  0x58ec8348
(gdb) x/w 0x00007ffff7a8ba50
0x7ffff7a8ba50 <_ZN8CryptoPP11RSAFunction10AssignFromERKNS_14NameValuePairsE>:  0x48ec8348
(gdb) x/w 0x00007ffff7dc30c0
0x7ffff7dc30c0 <_ZTIN8CryptoPP11RSAFunctionE>:  0x0063f210
(gdb) x/w 0x00000000004286a0
0x4286a0 <_ZThn8_N8CryptoPP11RSAFunctionD1Ev>:  0xe5894855
(gdb) x/w 0x00007ffff7a8f800
0x7ffff7a8f800 <_ZThn8_N8CryptoPP11RSAFunctionD0Ev>:    0x08ef8348
(gdb) x/w 0x00007ffff798fa70
0x7ffff798fa70 <_ZN8CryptoPP13X509PublicKey9BERDecodeERNS_22BufferedTransformationE>:   0x30ba5441
(gdb) x/w 0x00007ffff798f470
0x7ffff798f470 <_ZNK8CryptoPP13X509PublicKey9DEREncodeERNS_22BufferedTransformationE>:  0xfd894855
(gdb) x/w 0x00000000004289f0
0x4289f0 <_ZNK8CryptoPP10ASN1Object9BEREncodeERNS_22BufferedTransformationE>:   0xe5894855
(gdb) x/w 0x00007ffff798ff30
0x7ffff798ff30 <_ZNK8CryptoPP18ASN1CryptoMaterialINS_9PublicKeyEE4SaveERNS_22BufferedTransformationE>:  0x48078b48
(gdb) x/w 0x00007ffff798ff50
0x7ffff798ff50 <_ZN8CryptoPP18ASN1CryptoMaterialINS_9PublicKeyEE4LoadERNS_22BufferedTransformationE>:   0x48078b48
(gdb) x/w 0x00007ffff7a8aff0
0x7ffff7a8aff0 <_ZThn8_NK8CryptoPP11RSAFunction14GetAlgorithmIDEv>:     0x08ee8348
(gdb) x/w 0x00007ffff7990c10
0x7ffff7990c10 <_ZN8CryptoPP13X509PublicKey28BERDecodeAlgorithmParametersERNS_22BufferedTransformationE>:      0x08ec8348
(gdb) x/w 0x00007ffff7990bd0
0x7ffff7990bd0 <_ZNK8CryptoPP13X509PublicKey28DEREncodeAlgorithmParametersERNS_22BufferedTransformationE>:     0x08ec8348
(gdb) x/w 0x00007ffff7a8aa90
0x7ffff7a8aa90 <_ZThn8_N8CryptoPP11RSAFunction18BERDecodePublicKeyERNS_22BufferedTransformationEbm>:    0x08ef8348
(gdb) x/w 0x00007ffff7a8a9f0
0x7ffff7a8a9f0 <_ZThn8_NK8CryptoPP11RSAFunction18DEREncodePublicKeyERNS_22BufferedTransformationE>:     0x08ef8348
(gdb) x/w 0x00007ffff7dc30c0
0x7ffff7dc30c0 <_ZTIN8CryptoPP11RSAFunctionE>:  0x0063f210
(gdb) x/w 0x0000000000428700
0x428700 <_ZThn16_N8CryptoPP11RSAFunctionD1Ev>: 0xe5894855
(gdb) x/w 0x00007ffff7a8f7f0
0x7ffff7a8f7f0 <_ZThn16_N8CryptoPP11RSAFunctionD0Ev>:   0x10ef8348
(gdb) x/w 0x00007ffff7a8ae70
0x7ffff7a8ae70 <_ZTv0_n32_NK8CryptoPP11RSAFunction12GetVoidValueEPKcRKSt9type_infoPv>:  0x49178b4c
(gdb) x/w 0x00007ffff7a8bad0
0x7ffff7a8bad0 <_ZTv0_n40_N8CryptoPP11RSAFunction10AssignFromERKNS_14NameValuePairsE>:  0x49178b4c
(gdb) x/w 0x00007ffff7a8ab20
0x7ffff7a8ab20 <_ZTv0_n48_NK8CryptoPP11RSAFunction8ValidateERNS_21RandomNumberGeneratorEj>:     0x49178b4c
(gdb) x/w 0x0000000000428d90
0x428d90 <_ZNK8CryptoPP14CryptoMaterial14ThrowIfInvalidERNS_21RandomNumberGeneratorEj>: 0xe5894855
(gdb) x/w 0x00007ffff798ff40
0x7ffff798ff40 <_ZTv0_n64_NK8CryptoPP18ASN1CryptoMaterialINS_9PublicKeyEE4SaveERNS_22BufferedTransformationE>: 0x49178b4c
(gdb) x/w 0x00007ffff798ff60
0x7ffff798ff60 <_ZTv0_n72_N8CryptoPP18ASN1CryptoMaterialINS_9PublicKeyEE4LoadERNS_22BufferedTransformationE>:  0x49178b4c
(gdb) x/w 0x0000000000429060
0x429060 <_ZNK8CryptoPP14CryptoMaterial22SupportsPrecomputationEv>:     0xe5894855
(gdb) x/w 0x0000000000429080
0x429080 <_ZN8CryptoPP14CryptoMaterial10PrecomputeEj>:  0xe5894855
(gdb) x/w 0x00000000004291a0
0x4291a0 <_ZN8CryptoPP14CryptoMaterial18LoadPrecomputationERNS_22BufferedTransformationE>:      0xe5894855
(gdb) x/w 0x00000000004292c0
0x4292c0 <_ZNK8CryptoPP14CryptoMaterial18SavePrecomputationERNS_22BufferedTransformationE>:     0xe5894855
(gdb)
-----
:!grep '^0x' | awk '{print $2}'
:normal 0xf>D
:!c++filt
-----
typeinfo for CryptoPP::RSAFunction
CryptoPP::RSAFunction::~RSAFunction()
CryptoPP::RSAFunction::~RSAFunction()
CryptoPP::RSAFunction::PreimageBound() const
CryptoPP::RSAFunction::ImageBound() const
CryptoPP::TrapdoorFunctionBounds::MaxPreimage() const
CryptoPP::TrapdoorFunctionBounds::MaxImage() const
CryptoPP::TrapdoorFunction::ApplyRandomizedFunction(CryptoPP::RandomNumberGenerator&, CryptoPP::Integer const&) const
CryptoPP::TrapdoorFunction::IsRandomized() const
CryptoPP::RSAFunction::ApplyFunction(CryptoPP::Integer const&) const
CryptoPP::RSAFunction::GetAlgorithmID() const
CryptoPP::RSAFunction::BERDecodePublicKey(CryptoPP::BufferedTransformation&, bool, unsigned long)
CryptoPP::RSAFunction::DEREncodePublicKey(CryptoPP::BufferedTransformation&) const
CryptoPP::RSAFunction::Validate(CryptoPP::RandomNumberGenerator&, unsigned int) const
CryptoPP::RSAFunction::GetVoidValue(char const*, std::type_info const&, void*) const
CryptoPP::RSAFunction::AssignFrom(CryptoPP::NameValuePairs const&)
typeinfo for CryptoPP::RSAFunction
non-virtual thunk to CryptoPP::RSAFunction::~RSAFunction()
non-virtual thunk to CryptoPP::RSAFunction::~RSAFunction()
CryptoPP::X509PublicKey::BERDecode(CryptoPP::BufferedTransformation&)
CryptoPP::X509PublicKey::DEREncode(CryptoPP::BufferedTransformation&) const
CryptoPP::ASN1Object::BEREncode(CryptoPP::BufferedTransformation&) const
CryptoPP::ASN1CryptoMaterial<CryptoPP::PublicKey>::Save(CryptoPP::BufferedTransformation&) const
CryptoPP::ASN1CryptoMaterial<CryptoPP::PublicKey>::Load(CryptoPP::BufferedTransformation&)
non-virtual thunk to CryptoPP::RSAFunction::GetAlgorithmID() const
CryptoPP::X509PublicKey::BERDecodeAlgorithmParameters(CryptoPP::BufferedTransformation&)
CryptoPP::X509PublicKey::DEREncodeAlgorithmParameters(CryptoPP::BufferedTransformation&) const
non-virtual thunk to CryptoPP::RSAFunction::BERDecodePublicKey(CryptoPP::BufferedTransformation&, bool, unsigned long)
non-virtual thunk to CryptoPP::RSAFunction::DEREncodePublicKey(CryptoPP::BufferedTransformation&) const
typeinfo for CryptoPP::RSAFunction
non-virtual thunk to CryptoPP::RSAFunction::~RSAFunction()
non-virtual thunk to CryptoPP::RSAFunction::~RSAFunction()
virtual thunk to CryptoPP::RSAFunction::GetVoidValue(char const*, std::type_info const&, void*) const
virtual thunk to CryptoPP::RSAFunction::AssignFrom(CryptoPP::NameValuePairs const&)
virtual thunk to CryptoPP::RSAFunction::Validate(CryptoPP::RandomNumberGenerator&, unsigned int) const
CryptoPP::CryptoMaterial::ThrowIfInvalid(CryptoPP::RandomNumberGenerator&, unsigned int) const
virtual thunk to CryptoPP::ASN1CryptoMaterial<CryptoPP::PublicKey>::Save(CryptoPP::BufferedTransformation&) const
virtual thunk to CryptoPP::ASN1CryptoMaterial<CryptoPP::PublicKey>::Load(CryptoPP::BufferedTransformation&)
CryptoPP::CryptoMaterial::SupportsPrecomputation() const
CryptoPP::CryptoMaterial::Precompute(unsigned int)
CryptoPP::CryptoMaterial::LoadPrecomputation(CryptoPP::BufferedTransformation&)
CryptoPP::CryptoMaterial::SavePrecomputation(CryptoPP::BufferedTransformation&) const
-----
